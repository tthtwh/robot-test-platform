# 数据源配置
spring:
    application:
        name: spb-server
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        druid:
            # 主库数据源
            master:
                url: jdbc:mysql://192.168.201.134:3306/luckyframe?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&&useSSL=false
                username: root
                password: 123456
#            master:
#                url: jdbc:mysql://10.233.1.60:3306/luckyframe?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&&useSSL=false
#                username: root
#                password: cp.2021
            # 从库数据源
            slave:
                # 从数据源开关/默认关闭
                enabled: false
                url: 
                username: 
                password: 
            # 初始连接数
            initialSize: 5
            # 最小连接池数量
            minIdle: 10
            # 最大连接池数量
            maxActive: 20
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            # 配置一个连接在池中最大生存的时间，单位是毫秒
            maxEvictableIdleTimeMillis: 900000
            # 配置检测连接是否有效
            validationQuery: SELECT 1 FROM DUAL
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false      
            statViewServlet:
                enabled: true
                url-pattern: /monitor/druid/*
            filter:
                stat:
                    # 慢SQL记录
                    log-slow-sql: true
                    slow-sql-millis: 2000
                    merge-sql: true
                wall:
                    config:
                        multi-statement-allow: true
grpc:
    server:
        port: 9091

kubernetes:
    application:
        url: "http://192.168.201.130:30880/kapis/resources.kubesphere.io/v1alpha3/namespaces/cyber/pods?sortBy=startTime&limit=10"
        versionsUrl: "http://192.168.201.130:30880/kapis/openpitrix.io/v1/apps/app-0lk77wp06r3q2p/versions"
        createUrl: "http://192.168.201.130:30880/kapis/openpitrix.io/v1/workspaces/cyber/namespaces/cyber/applications"
        port: 80
        exampleId: robot

